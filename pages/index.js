import Head from 'next/head';
import { useEffect, useState } from 'react';
import axios from 'axios';
import { BsSearch } from 'react-icons/bs';
import Weather from '../components/Weather';
import Spinner from '../components/Spinner';
import ShowTime from '../components/ShowTime';
import AdditionalWeather from '../components/AdditionalWeather';

export default function Home() {
  const [lat, setLat] = useState([]);
  const [long, setLong] = useState([]);
  const [data, setData] = useState([]);
  const [city, setCity] = useState('');

  useEffect(() => {
    const fetchData = async () => {
      navigator.geolocation.getCurrentPosition(function (position) {
        setLat(position.coords.latitude);
        setLong(position.coords.longitude);
      });

      await fetch(
        `${process.env.NEXT_PUBLIC_WEATHER_URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.NEXT_PUBLIC_WEATHER_KEY}`
      )
        .then((res) => res.json())
        .then((result) => {
          setData(result);
          console.log(result);
        });
    };
    fetchData();
  }, [lat, long]);

  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.NEXT_PUBLIC_WEATHER_KEY}`;

  const fetchWeather = (e) => {
    e.preventDefault();
    try {
      axios.get(url).then((response) => {
        setData(response.data);
        console.log(response.data);
        setCity('');
      });
    } catch (err) {
      console.log(err);
    }
  };

  return (
    <>
      <Head>
        <title>Weather App - Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className='flex flex-col w-full'>
        {typeof data.main != 'undefined' ? (
          <div>
            <div className='m-auto'>
              <form
                onSubmit={fetchWeather}
                className='flex flex-col items-center'
              >
                <div className='mt-16 flex flex-row align-center relative'>
                  <input
                    onChange={(e) => setCity(e.target.value)}
                    type='text'
                    placeholder='Search location'
                    className='placeholder:text-white placeholder:text-opacity-60 font-medium p-2 text-white bg-transparent border-solid border-b-2 border-white focus:outline-none'
                  ></input>
                  <button
                    className='ml-2 bg-transparent text-white pl-4 pr-4 rounded-md font-serif absolute right-0 top-3.5'
                    onClick={fetchWeather}
                  >
                    <BsSearch></BsSearch>
                  </button>
                </div>
                <div className='flex flex-col items-center'>
                  <ShowTime />
                </div>
              </form>
            </div>

            <div>
              <Weather weatherData={data} />
              <AdditionalWeather weatherData={data} />
            </div>
          </div>
        ) : (
          <div>
            <Spinner />
          </div>
        )}
      </main>
    </>
  );
}
